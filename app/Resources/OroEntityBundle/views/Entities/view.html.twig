{% extends 'OroUIBundle:actions:view.html.twig' %}
{% import 'OroEntityBundle::macros_custom.html.twig' as entityConfigCustom %}

{% oro_title_set({params : {
    "%entityName%": entity_config.get('label')|default('N/A')|trans,
    "%recordName%": entity|oro_format_name|default('oro.entity.item'|trans({'%id%': entity.id})) },
}) %}

{% block navButtons %}
    {% if resource_granted('EDIT', entity) %}
        {{ UI.editButton({
            'path': path('oro_entity_update', {entityName: entity_name, id: entity.id}),
            'entity_label': entity_config.get('label')|default('N/A')|trans
        }) }}
    {% endif %}
    {% if resource_granted('DELETE', entity) %}
        {{ UI.deleteButton({
            'dataUrl': path('oro_entity_delete', {'entityName': entity_class, 'id': entity.id}),
            'dataRedirect': path('oro_entity_index', {'entityName': entity_class}),
            'aCss': 'no-hash remove-button',
            'dataId': entity.id,
            'id': 'btn-remove-account',
            'entity_label': entity_config.get('label')|default('N/A')|trans
        }) }}
    {% endif %}
{% endblock navButtons %}

{% block pageHeader %}
    {% set breadcrumbs = {
        'entity':      entity,
        'indexPath':   path('oro_entityconfig_index'),
        'indexLabel': 'oro.entity.plural_label'|trans,
        'entityTitle': entity|oro_format_name|default('oro.entity.item'|trans({'%id%': entity.id})),
        'additional': [{
            'indexPath'  : path('oro_entity_index', {entityName: entity_name}),
            'indexLabel' : entity_config.get('label')|default('N/A')|trans
        }]
    }%}

    {{ parent() }}
{% endblock pageHeader %}

{% block stats %}
{% endblock stats%}

{% block content_data %}

    {% set dataBlockFields = [{
        'title': 'General',
        'class': 'active',
        'subblocks': [{
            'title': 'General Information'|trans,
            'data':  [entityConfigCustom.renderDynamicFields(entity, entity_class)]
            }]
        }]
    %}

    {% set dynamicFields = oro_get_dynamic_fields(entity, entity_class) %}
    {% for fieldName, item in dynamicFields %}
        {% if feature_resource_enabled(fieldName, 'field_configs') %}
            {% if item.type == 'oneToMany' %}
                {% set dataField = entityConfigCustom.renderDynamicFieldsOneToManyField(entity, entity_class, fieldName, item) %}
                {% set dataBlockFields = dataBlockFields|merge([{
                        'title': item.label|trans|capitalize,
                        'subblocks': [{
                        'title': item.label|trans|capitalize,
                        'data':  [dataField]
                        }]
                    }]
                    )
                %}
            {% endif %}
        {% endif %}
    {% endfor %}

    {% set data = { 'dataBlocks': dataBlockFields } %}

    {{ parent() }}
{% endblock content_data %}
